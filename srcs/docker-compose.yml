version: '3'

services:
    mariadb:
        build:
            context: requirements/mariadb
            dockerfile: Dockerfile
        container_name: mariadb
        restart: always
        env_file: .env
        volumes:
            - /home/fporto/data/mariadb/dbdata:/var/lib/mysql
        networks:
            - web-network



    wordpress:
        depends_on:
            - mariadb
        build:
            context: requirements/wordpress/
            dockerfile: Dockerfile
        container_name: wordpress
        restart: unless-stopped
        env_file: .env
        volumes:
            - /home/fporto/data/website-root:/var/www/html
        networks:
            - web-network



    nginx:
        depends_on:
            - wordpress
            - adminer
        build:
            context: requirements/nginx/
            dockerfile: Dockerfile
        container_name: nginx
        restart: unless-stopped
        volumes:
            # - /home/fporto/data/nginx/conf:/etc/nginx/conf.d
            - /home/fporto/data/website-root:/var/www/html:ro
            # - /home/fporto/data/nginx/tools/certbot/conf:/etc/letsencrypt:ro
        ports:
            - 443:443
        networks:
            - web-network

    # certbot:
    #     depends_on:
    #         - nginx
    #     build:
    #         context: requirements/nginx/tools/certbot
    #         dockerfile: Dockerfile
    #     container_name: certbot
    #     restart: unless-stopped
    #     env_file: .env
    #     volumes:
    #         - /home/fporto/data/nginx/tools/certbot/conf:/etc/letsencrypt:rw
    #         - /home/fporto/data/website-root:/var/www/html:rw
    #     command: certonly --webroot --webroot-path=/var/www/html --email test@${DOMAIN_NAME} --agree-tos --no-eff-email --staging -d ${DOMAIN_NAME} -d www.${DOMAIN_NAME}



    adminer:
        depends_on:
            - mariadb
        build:
            context: requirements/bonus/adminer
            dockerfile: Dockerfile
        container_name: adminer
        restart: always
        # ports:
        #     - 8080:8080
        networks:
            - web-network



    portainer:
        # depends_on:
        #     - certbot
        build:
            context: requirements/bonus/portainer
            dockerfile: Dockerfile
        container_name: portainer
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /home/fporto/data/portainer/data:/data
            # - /home/fporto/data/nginx/tools/certbot/conf:/data/ssl:ro
        # ports:
            # - 8000:8000
            # - 9000:9000
            # - 9443:9443
        networks:
            - web-network
        # command:
        #     --sslcert /data/server.crt
        #     --sslkey /data/server.key



# volumes:
#     dbdata:
#     certbot-etc:
#     website-root:



networks:
    web-network:
        driver: bridge
